@import url("https://fonts.googleapis.com/css2?family=Protest+Riot&display=swap");

$gridGap: 12px;
$hexagonWidth: 72px;
$summaryWidth: 270px;
$summaryHeight: 700px;
$turnHeight: 150px;

$colorBrownLight: #f3a556;
$colorBrownDark: #bb7b3c;
$colorRedLight: #fe9191;
$colorRedDark: #f24f4f;
$colorYellowLight: #ffe76c;
$colorYellowDark: #ffc700;
$colorGreenLight: #adf8af;
$colorGreenDark: #65df67;
$colorBlueLight: #6fc5ff;
$colorBlueLightDarken: #54a1d5;
$colorBlueDark: #4870ff;
$colorBluePond: #3e6589;
$colorRedGradient: linear-gradient(150deg, $colorRedLight, $colorRedDark);
$colorYellowGradient: linear-gradient(
    150deg,
    $colorYellowLight,
    $colorYellowDark
);
$colorGreenGradient: linear-gradient(150deg, $colorGreenLight, $colorGreenDark);
$colorBlueGradient: linear-gradient(150deg, $colorBlueLight, $colorBlueDark);
$colorWhiteGradient: linear-gradient(white, white);

@mixin flexDisplay($j: center, $a: center, $d: row) {
    display: flex;
    justify-content: $j;
    align-items: $a;
    flex-direction: $d;
}

@mixin abPos($l: initial, $t: initial) {
    position: absolute;
    left: $l;
    top: $t;
}

@mixin fixedPos($l: initial, $t: initial) {
    position: fixed;
    left: $l;
    top: $t;
}

@mixin size($w, $h: $w, $r: 0) {
    width: $w;
    height: $h;
    border-radius: $r;
}

@mixin fontStyle(
    $color: black,
    $size: 16px,
    $weight: 400,
    $letterSpacing: 2px
) {
    color: $color;
    font-size: $size;
    font-weight: $weight;
    letter-spacing: $letterSpacing;
    font-family: "Protest Riot", sans-serif;
}

@mixin cellStyle($backgroundColor: $colorBlueLight) {
    z-index: 3;
    @include flexDisplay(center, center, column);
    position: relative;
    width: $hexagonWidth;
    height: calc((sqrt(3) / 2) * $hexagonWidth);
    padding: 15px;
    margin: 0 $gridGap;
    /* transform to a symmetric hexagon */
    background: $backgroundColor;
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    /* reduce the gap */
    transform: scale(1.2);

    &.red {
        &:hover:enabled {
            @include hover($colorRedDark);
        }
        &:disabled {
            @include disabled;
        }
    }
    &.yellow {
        &:hover:enabled {
            @include hover($colorYellowDark);
        }
        &:disabled {
            @include disabled;
        }
    }
    &.green {
        &:hover:enabled {
            @include hover($colorGreenDark);
        }
        &:disabled {
            @include disabled;
        }
    }
    &.blue {
        &:hover:enabled {
            @include hover($colorBlueDark);
        }
        &:disabled {
            @include disabled;
        }
    }
}

@mixin hover($primary) {
    background: $primary;
    transform: scale(1.4);
    cursor: pointer;
}

@mixin disabled {
    filter: brightness(60%);
    cursor: default;
}

@mixin titleStyle {
    @include fontStyle(white, 20px);
    margin: 0;
    margin-top: -50px;
    margin-bottom: 25px;
    padding: 4px 16px;
    background: $colorBlueLight;
    border-radius: 10px 10px 0 0;
}

html,
body {
    @include size(100%);
    margin: 0;
    padding: 0;
}

#root,
.bgio-client {
    @include size(100%);
}

/* remove button default styles */
button {
    background: none;
    color: inherit;
    border: none;
    padding: 0;
    font: inherit;
    cursor: pointer;
    outline: inherit;
}

.board {
    @include size(100%);
    @include flexDisplay(center, center, column);
    min-width: fit-content;
    position: relative;
    font-family: "Protest Riot", sans-serif;
    letter-spacing: 1px;
    background: #e0ecf2;
    $r: 30px;
    box-shadow: (-$r) (-$r) #ecfffd;
    padding: 8px;

    .banner {
        $w: 390px;
        z-index: 10;
        @include size($w, fit-content, 5px);
        @include flexDisplay(center, center, column);
        padding: 16px;
        margin-top: -20px;
        background: $colorBlueLight;
        box-shadow: 5px 5px $colorBlueLightDarken;

        .header,
        .subTitle {
            margin: 0;
            color: rgba(white, 0.9);
        }
    }
}

.leaderboard {
    z-index: 10;
    $colorTitle: $colorBlueLight;
    $width: 170px;
    $bdRS: 10px;
    margin: 4px;
    @include size($width, fit-content, 0 $bdRS $bdRS 0);
    @include fixedPos(8px, 8px);
    @include flexDisplay(flex-start, flex-start, column);

    .playerInfo {
        $height: 70px;
        @include flexDisplay(center, center, row);
        @include fontStyle;
        @include size($width, $height, calc($width * 0.5));
        border: 4px solid transparent;
        margin: 2px;
        .playerIcon {
            flex: 2;
            @include flexDisplay(flex-start);
            margin-left: 24px;
        }
        .score {
            flex: 5;
            @include flexDisplay;
            padding: 0 8px 8px 0;
        }
        &.focus {
            @include size(
                calc($width * 1.2),
                calc($height * 1.2),
                calc($width * 0.5)
            );
        }

        &.red {
            background: $colorWhiteGradient padding-box,
                $colorRedGradient border-box;
        }
        &.yellow {
            background: $colorWhiteGradient padding-box,
                $colorYellowGradient border-box;
        }
        &.green {
            background: $colorWhiteGradient padding-box,
                $colorGreenGradient border-box;
        }
        &.blue {
            background: $colorWhiteGradient padding-box,
                $colorBlueGradient border-box;
        }
    }
}

.table {
    @include size(80%, 100%, 2%);
    @include flexDisplay(center, center, column);
    min-width: fit-content;
    background: #3e6589;
    box-shadow: inset 10px 5px #a5c0df, inset -10px -5px #a5c0df;
    &::before {
        content: "PENGUIN BATTLE";
        display: block;
        @include size(fit-content, fit-content);
        @include abPos(-5%, 20%);
        @include fontStyle(#6196c8, 36px, 800);
        text-align: end;
        transform: rotate(-90deg);
    }
    &::after {
        z-index: 2;
        content: "based on 'Hey! That's My Fish!'";
        display: block;
        @include size(fit-content, fit-content);
        @include abPos(85%, 90%);
        @include fontStyle(#6196c8, 16px, 800);
        text-align: start;
        transform: rotate(0deg);
    }

    .row {
        @include flexDisplay;
    }
}

[class^="emptyCell"] {
    @include cellStyle;
}

.colonisedCell {
    .fishIconGrid {
        z-index: 20;
        transform: translateY(70%);
    }

    $opacity: 0.9;

    &.red {
        @include cellStyle(rgba($colorRedDark, $opacity));
    }
    &.yellow {
        @include cellStyle(rgba($colorYellowDark, $opacity));
    }
    &.green {
        @include cellStyle(rgba($colorGreenDark, $opacity));
    }
    &.blue {
        @include cellStyle(rgba($colorBlueDark, $opacity));
    }
}

.eatenCell {
    &.red,
    &.yellow,
    &.green,
    &.blue {
        @include cellStyle(transparent);
        .fishIconGrid {
            filter: opacity(0);
        }
    }
}

.textStyle {
    margin: 8px;
    font-size: 14px;
    color: rgba($color: white, $alpha: 0.85);
}

.labourIconGrid {
    z-index: 10;
    @include size(100%);
    @include flexDisplay;
    @include abPos(0, -5%);
}

.fishIconGrid {
    @include flexDisplay(space-evenly, center, row);
    width: 100%;
}

.winner {
    z-index: 100;
    $width: 100%;
    $height: 20%;
    @include size($width, $height);
    @include flexDisplay;
    @include fixedPos(0, 40%);
    padding: 16px;
    background: white;
    box-shadow: 0 0 30px rgba(black, 0.8);

    .title {
        margin-left: 5%;
    }
}

/* Animation */
@keyframes zoom {
    50% {
        transform: scale(1.1);
    }
}

@keyframes vSlideIn {
    0% {
        transform: translateY(-50px);
    }
    50% {
        transform: translateY(10px);
    }
    100% {
        transform: translateY(0px);
    }
}

@keyframes hSlideIn {
    0% {
        transform: translateX(-50px);
    }
    50% {
        transform: translateX(10px);
    }
    100% {
        transform: translateX(0px);
    }
}

[class^="emptyCell"] {
    animation: zoom 1s;
}

@for $i from 0 through 14 {
    .emptyCell#{$i} {
        animation-delay: $i * 0.1s;
    }
}

.banner {
    animation: vSlideIn 1s;
}

.leaderboard,
.playerTurn {
    animation: hSlideIn 2s;
}
