@import url("https://fonts.googleapis.com/css2?family=Protest+Riot&display=swap");

$colorRed: #f24f4f;
$colorRedLight: #fe9191;
$colorYellow: #ffc700;
$colorYellowLight: #ffe76c;
$colorGreen: #65df67;
$colorGreenLight: #adf8af;
$colorBlue: #4870ff;
$colorBlueLight: #6fc5ff;
$colorBlueDark: #0058ff;
$colorGrey: #8c8c8c;
$colorGreyDark: #303030;
$colorPurple: #ab87ff;
$colorPurpleDark: #8049ff;
$colorOrange: #ffba4c;
$colorOrangeDark: #f29100;
$colorGreyShadow: rgba(black, 25%);

$gridSize: 20px;
$penguinBodyRadius: 50% 50% 3px 3px;
$penguinBodyWidth: 16px;
$penguinBodyHeight: 18px;
$penguinBellySize: 12px;
$penguinFaceWidth: 14px;
$penguinFaceHeight: 8px;
$penguinEyeSize: 6px;
$penguinMouthWidth: 6px;
$penguinMouthHeight: 1px;
$penguinFeetWidth: 10px;
$penguinFeetHeight: 2px;
$penguinWingsWidth: $penguinFaceWidth;
$penguinWingsHeight: 7px;
$penguinWingWidth: 4px;

$fishBodyHeight: 10px;
$fishBodyWidth: 10px;
$fishEyeSize: 2px;
$fishTailSize: 5px;

@mixin flex($j: center, $a: center, $d: row) {
    display: flex;
    justify-content: $j;
    align-items: $a;
    flex-direction: $d;
}

@mixin size($w, $h: $w, $r: 0) {
    width: $w;
    height: $h;
    border-radius: $r;
}

@mixin abPos($left, $top) {
    position: absolute;
    left: $left;
    top: $top;
}

* {
    position: relative;
}

/* Penguin Icon */
@mixin penguin($playerColor) {
    .body {
        @include size(
            $penguinBodyWidth,
            $penguinBodyHeight,
            $penguinBodyRadius
        );
        background-color: black;

        .face {
            z-index: 6;
            @include size($penguinFaceWidth, $penguinFaceHeight);
            @include abPos(50%, 10%);
            @include flex(center, center, column);
            transform: translateX(calc(-1 * $penguinFaceWidth / 2));
            .eyes {
                @include flex;
                .eye1 {
                    @include size(
                        $penguinEyeSize,
                        $penguinEyeSize,
                        50% 40% 20% 50%
                    );
                }
                .eye2 {
                    @include size(
                        $penguinEyeSize,
                        $penguinEyeSize,
                        40% 50% 50% 20%
                    );
                }
                .eye1,
                .eye2 {
                    background: #fff;
                    @include flex(center, flex-end, row);
                }
                .eyeBall1,
                .eyeBall2 {
                    $width: 1px;
                    @include size($width, $width, 50%);
                    background: black;
                    margin-bottom: 1px;
                }
            }
            .mouth {
                @include size($penguinMouthWidth, $penguinMouthHeight, 50%);
                background: $colorYellow;
                box-shadow: inset -0.2px 0.2px $colorGreyShadow;
                margin-top: -1px;
            }
        }
        .belly {
            z-index: 5;
            @include size(
                $penguinBellySize,
                $penguinBellySize,
                $penguinBodyRadius
            );
            @include abPos(50%, 100%);
            transform: translateX(calc(-1 * $penguinBellySize / 2))
                translateY(-$penguinBellySize);
            background-color: #fff;
            box-shadow: inset 0px -0.5px $colorGreyShadow;
        }
        .feet {
            z-index: 7;
            @include size($penguinFeetWidth, $penguinFeetHeight);
            @include flex(space-between, center, row);
            @include abPos(
                calc($penguinBodyWidth / 2),
                $penguinBodyHeight - $penguinFeetHeight
            );
            transform: translateX(calc(-1 * $penguinFeetWidth / 2));
            .foot {
                @include size($penguinFeetHeight * 2, $penguinFeetHeight, 50%);
                background-color: $colorYellow;
                box-shadow: inset 0px -0.5px $colorGreyShadow;
            }
        }
        .wings {
            z-index: 8;
            @include size($penguinWingsWidth, $penguinWingsHeight);
            @include flex(space-between, center, row);
            @include abPos(calc($penguinBodyWidth/2), 50%);
            transform: translateX(calc(-1 * $penguinWingsWidth / 2));
            .wing1,
            .wing2 {
                background-color: black;
                @include size($penguinWingWidth, $penguinWingsHeight);
            }
            .wing1 {
                border-radius: 45% 100% 45% 50%;
            }
            .wing2 {
                border-radius: 100% 45% 50% 45%;
            }
        }

        .knife {
            z-index: 7;
            $w: 4px;
            $h: 4px;
            @include size($w, $h, 0 50% 50% 0);
            @include abPos(2px, 0);
            background-color: $playerColor;
            transform: rotate(-30deg);
            &::after {
                content: "";
                display: block;
                background-color: inherit;
                @include size(1px, 3px, 0 0 2px 2px);
                margin-top: $h - 1px;
            }
        }
        .spoon {
            z-index: 7;
            $w: 4px;
            $h: 4px;
            @include size($w, $h, 50%);
            @include abPos(-1px, 0);
            background-color: $playerColor;
            transform: rotate(15deg);
            &::after {
                content: "";
                display: block;
                background-color: inherit;
                @include size(1px, 3px, 0 0 2px 2px);
                margin-top: $h - 1px;
                margin-left: 1.5px;
            }
        }

        .card {
            z-index: 6;
            $width: calc($penguinBodyHeight/3);
            @include size($width, $width, 1px);
            @include flex;
            @include abPos(calc($penguinBodyWidth/2), 55%);
            transform: translateX(calc(-1 * $width / 2));
            box-shadow: inset -0.5px -0.5px $colorGreyShadow;
            background-color: $playerColor;
            .id > h1 {
                margin: 0;
                padding: 0 0 1px 1px;
                font-size: 5px;
                font-family: "Protest Riot", sans-serif;
                color: white;
            }
        }

        &.active {
            .wing1 {
                animation: leftWingAnimation 0.5s infinite alternate;
            }
            .knife {
                animation: knifeAnimation 0.5s infinite alternate;
            }
            .spoon {
                animation: spoonAnimation 0.5s infinite alternate;
            }
            .wing2 {
                animation: rightWingAnimation 0.5s infinite alternate;
            }
            .card {
                animation: cardAnimation 0.5s infinite alternate;
            }
        }
    }

    @keyframes leftWingAnimation {
        100% {
            @include size(
                $penguinWingWidth,
                $penguinWingsHeight,
                100% 45% 0 45%
            );
            transform: translateX(-3px);
        }
    }

    @keyframes rightWingAnimation {
        100% {
            @include size(
                $penguinWingWidth,
                $penguinWingsHeight,
                45% 100% 45% 0
            );
            transform: translateX(3px);
        }
    }

    @keyframes cardAnimation {
        $width: calc($penguinBodyHeight/3);
        100% {
            transform: translateX(calc(-1 * $width / 2)) translateY(-2px);
        }
    }

    @keyframes knifeAnimation {
        100% {
            transform: rotate(20deg);
        }
    }

    @keyframes spoonAnimation {
        100% {
            transform: rotate(-30deg);
        }
    }
}

.grid {
    $width: 0.02em;
    @include flex;
    @include size($gridSize, $gridSize, 50%);
    background: $colorBlue content-box;
    border: solid $width $colorBlue;
    padding: $width;
    &.red {
        background: $colorRed content-box;
        border: solid $width $colorRed;
        @include penguin($colorRed);
    }
    &.yellow {
        background: $colorYellow content-box;
        border: solid $width $colorYellow;
        @include penguin($colorYellow);
    }
    &.green {
        background: $colorGreen content-box;
        border: solid $width $colorGreen;
        @include penguin($colorGreen);
    }
    &.blue {
        background: $colorBlue content-box;
        border: solid $width $colorBlue;
        @include penguin($colorBlue);
    }
}

.penguinLabour {
    &.red {
        @include penguin($colorRed);
    }
    &.yellow {
        @include penguin($colorYellow);
    }
    &.green {
        @include penguin($colorGreen);
    }
    &.blue {
        @include penguin($colorBlue);
    }
}

/* Fish Icon */
@mixin fish(
    $primary,
    $secondary,
    $bodyWidth,
    $bodyHeight: $bodyWidth,
    $eyeSize,
    $tailsSize
) {
    @include size($bodyWidth, $bodyHeight, 100% 100% 5% 100%);
    background-color: $primary;
    box-shadow: inset 0px calc(-0.1 * $bodyWidth) $secondary;

    .eye {
        @include size($eyeSize, $eyeSize, 100%);
        background-color: black;
        position: absolute;
        border: solid 1px white;
        top: 15%;
        left: 20%;
    }

    .tails {
        @include size($tailsSize, $tailsSize);
        position: absolute;
        top: $bodyHeight - calc($tailsSize / 2);
        left: $bodyWidth - calc($tailsSize / 2);
        transform: rotate(-45deg);
        .tail1,
        .tail2 {
            background-color: $primary;
        }
        .tail1 {
            z-index: 3;
            @include size(calc($tailsSize / 2), $tailsSize, 0 100% 100% 0);
            transform: rotate(45deg);
            position: absolute;
            left: 5%;
            box-shadow: inset 0px calc(-0.1 * $bodyWidth) $secondary;
        }
        .tail2 {
            z-index: 2;
            @include size(calc($tailsSize / 2), $tailsSize, 100% 0 0 100%);
            transform: rotate(-45deg);
            position: absolute;
            right: 5%;
            box-shadow: inset calc($bodyWidth * 0.1) 0px $secondary;
        }
    }
}

.fish-1 {
    @include fish(
        $colorGrey,
        $colorGreyDark,
        $fishBodyWidth,
        $fishBodyHeight,
        $fishEyeSize,
        $fishTailSize
    );
}

.fish-2 {
    @include fish(
        $colorPurple,
        $colorPurpleDark,
        $fishBodyWidth,
        $fishBodyHeight,
        $fishEyeSize,
        $fishTailSize
    );
}

.fish-3 {
    @include fish(
        $colorOrange,
        $colorOrangeDark,
        $fishBodyWidth,
        $fishBodyHeight,
        $fishEyeSize,
        $fishTailSize
    );
}

/* Fish Box Icon */
.fishBox {
    position: relative;
    @include size(50px);
    .box {
        $w: 50px;
        $h: 25px;
        z-index: 5;
        @include flex;
        @include size($w, $h, 2px 2px 5px 5px);
        @include abPos(50%, 100%);
        transform: translateX(calc(-1 * $w/2)) translateY(-1 * $h);
        h1 {
            color: black;
            font-size: 16px;
        }
        &.red {
            background-color: $colorRedLight;
            box-shadow: inset 0px -5px $colorRed;
        }
        &.yellow {
            background-color: $colorYellowLight;
            box-shadow: inset 0px -5px $colorYellow;
        }
        &.green {
            background-color: $colorGreenLight;
            box-shadow: inset 0px -5px $colorGreen;
        }
        &.blue {
            background-color: $colorBlueLight;
            box-shadow: inset 0px -5px $colorBlue;
        }
    }
    .tf-1 {
        z-index: 1;
        @include abPos(5%, 30%);
        transform: rotate(10deg);
    }
    .tf-2 {
        z-index: 3;
        @include abPos(25%, 30%);
        transform: rotate(-150deg);
    }
    .tf-3 {
        z-index: 2;
        @include abPos(46%, 26%);
        transform: rotate(60deg);
    }
    .tf-4 {
        z-index: 4;
        @include abPos(65%, 35%);
        transform: rotate(-100deg);
    }
}

.blackFish {
    @include fish(
        black,
        black,
        $fishBodyWidth,
        $fishBodyHeight,
        $fishEyeSize,
        $fishTailSize
    );
    border: solid 2px white;
}

/* Celebration Ribbons */
.allRibbons {
    @include size(100%, 100%);
    @include abPos(0, 0);
    overflow: hidden;

    $colorRed: #ed5564;
    $colorYellow: #ffce54;
    $colorGreen: #a0d568;
    $colorBlue: #4fc1e8;
    $colorPurple: #ac92eb;
    $colors: ($colorRed, $colorYellow, $colorGreen, $colorBlue, $colorPurple);

    @mixin falling($firstDeg, $secondDeg, $delay) {
        @keyframes fallingAni {
            0% {
                opacity: 0.2;
                transform: translate(-10px, 0) rotate($firstDeg);
            }
            70% {
                opacity: 1;
            }
            100% {
                opacity: 0;
                transform: translate(0px, 200px) rotate($secondDeg);
            }
        }

        animation: fallingAni 1s infinite both;
        animation-delay: $delay;
    }

    [class^="ribbon"] {
        @include size(10px, 25px, 2px);
    }

    @for $i from 1 through 50 {
        $posX: random() * 100%;
        $posY: random() * -70% + 50%;
        $first: random(30) - 50;
        $second: random(50) - 10;
        $delay: $i * -0.1s;
        $bodyColor: nth($colors, random(5));

        .ribbon#{$i} {
            z-index: $i;
            @include abPos($posX, $posY);
            @include falling(#{$first}deg, #{$second}deg, $delay);
            background-color: $bodyColor;
        }
    }
}
