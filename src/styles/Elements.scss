@import url("https://fonts.googleapis.com/css2?family=Protest+Riot&display=swap");

$colorRed: #f24f4f;
$colorRedLight: #fe9191;
$colorYellow: #ffc700;
$colorYellowLight: #ffe76c;
$colorGreen: #65df67;
$colorGreenLight: #adf8af;
$colorBlue: #4870ff;
$colorBlueLight: #6fc5ff;
$colorBlueDark: #0058ff;
$colorGrey: #8c8c8c;
$colorGreyDark: #303030;
$colorPurple: #ab87ff;
$colorPurpleDark: #8049ff;
$colorOrange: #ffba4c;
$colorOrangeDark: #f29100;
$colorGreyShadow: rgba(black, 25%);

$gridSize: 120px;
$penguinBodyHeight: 90px;
$penguinBodyWidth: 80px;
$fishBodyHeight: 30px;
$fishBodyWidth: 30px;
$fishEyeSize: 5px;
$fishTailSize: 15px;

@mixin flex($j: center, $a: center, $d: row) {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: $d;
}

@mixin size($w, $h: $w, $r: 0) {
    width: $w;
    height: $h;
    border-radius: $r;
}

@mixin absPos($left, $top) {
    position: absolute;
    left: $left;
    top: $top;
}

* {
    position: relative;
}

/* Penguin Icon */
@mixin penguin($playerColor) {
    .body {
        @include size($penguinBodyWidth, $penguinBodyHeight, 50% 50% 5px 5px);
        background-color: black;

        .face {
            z-index: 6;
            $width: $penguinBodyWidth - 10px;
            @include size($width, calc($penguinBodyWidth / 2));
            @include absPos(50%, 10%);
            @include flex(center, center, column);
            transform: translateX(calc(-1 * $width / 2));
            .eyes {
                @include flex;
                $eyeSize: calc($penguinBodyHeight / 3);
                .eye1 {
                    @include size($eyeSize, $eyeSize, 50% 40% 20% 50%);
                }
                .eye2 {
                    @include size($eyeSize, $eyeSize, 40% 50% 50% 20%);
                }
                .eye1,
                .eye2 {
                    background-color: #fff;
                    .eyeBall1,
                    .eyeBall2 {
                        $width: 5px;
                        @include size($width, $width, 50%);
                        transform: translateX(calc(-1 * $width / 2));
                        background-color: black;
                    }
                    .eyeBall1 {
                        @include absPos(60%, 60%);
                    }
                    .eyeBall2 {
                        @include absPos(40%, 60%);
                    }
                }
            }
            .mouth {
                $mouthSize: calc($penguinBodyHeight/3);
                @include size($mouthSize, 5px, 50%);
                margin-top: -5px;
                background-color: $colorYellow;
                box-shadow: inset -1px 1px $colorGreyShadow;
            }
        }
        .belly {
            z-index: 5;
            $len: calc($penguinBodyHeight * 2 / 3);
            @include size($len, $len, 50% 50% 5px 5px);
            @include absPos(50%, 100%);
            transform: translateX(calc(-1 * $len / 2)) translateY(-$len);
            background-color: #fff;
            box-shadow: inset 0px -5px $colorGreyShadow;
        }
        .feet {
            $width: calc($penguinBodyHeight * 5 / 9);
            $height: calc($penguinBodyHeight / 9);
            z-index: 7;
            @include size($width, $height);
            @include flex;
            justify-content: space-between;
            @include absPos(
                calc($penguinBodyWidth / 2),
                $penguinBodyHeight - $height
            );
            transform: translateX(calc(-1 * $width / 2));
            .foot {
                $width: calc($penguinBodyWidth/4);
                $height: calc($width/2);
                @include size($width, $height, 50%);
                background-color: $colorYellow;
                box-shadow: inset 0px -2px $colorGreyShadow;
            }
        }
        .wings {
            z-index: 8;
            $width: calc($penguinBodyHeight * 10 / 9);
            $height: calc($penguinBodyHeight/3);
            @include size($width, $height);
            @include flex;
            justify-content: space-between;
            @include absPos(
                calc($penguinBodyWidth/2),
                $penguinBodyHeight - $height * 1.5
            );
            transform: translateX(calc(-1 * $width / 2));
            .wing1,
            .wing2 {
                background-color: black;
            }
            .wing1 {
                $width: calc($penguinBodyWidth/4);
                $height: calc($penguinBodyHeight/3);
                @include size($width, $height, 45% 100% 45% 0);
                transform: translateX(calc($height/2));
            }
            .wing2 {
                $width: calc($penguinBodyWidth/4);
                $height: calc($penguinBodyHeight/3);
                @include size($width, $height, 100% 45% 0 45%);
                transform: translateX(calc(-1 * $height/2));
            }
        }

        .knife {
            z-index: 7;
            $w: 12px;
            $h: 20px;
            @include size($w, $h, 0 50% 50% 0);
            @include absPos(10px, -10px);
            background-color: $playerColor;
            transform: rotate(-30deg);
            &::after {
                content: "";
                display: block;
                background-color: inherit;
                @include size(calc($w/4), $w * 1.2, 0 0 2px 2px);
                margin-top: $h - 2px;
            }
        }
        .spoon {
            z-index: 7;
            $w: 12px;
            $h: 20px;
            @include size($w, $h, 50%);
            @include absPos(0, -10px);
            background-color: $playerColor;
            transform: rotate(15deg);
            &::after {
                content: "";
                display: block;
                background-color: inherit;
                @include size(calc($w/4), $w * 1.2, 0 0 2px 2px);
                margin-top: $h - 2px;
                margin-left: calc($w/2) - calc($w/8);
            }
        }

        .card {
            z-index: 6;
            $width: calc($penguinBodyHeight/3);
            @include size($width, $width, 2px);
            @include flex;
            @include absPos(calc($penguinBodyWidth/2), 50px);
            transform: translateX(calc(-1 * $width / 2));
            box-shadow: inset -2px -2px $colorGreyShadow;
            background-color: $playerColor;
            .id > h1 {
                margin: 0;
                font-size: calc($penguinBodyWidth/4);
                font-family: "Protest Riot", sans-serif;
                color: white;
            }
        }
    }

    @keyframes cardAnimation {
        0% {
            transform: translateX(-15px);
        }
        100% {
            transform: translateX(-15px) translateY(-6px);
        }
    }

    .body:hover {
        .wing1 {
            @include size(20px, 30px, 100% 45% 0 45%);
            transform: translateX(0px);
        }
        .knife {
            transform: rotate(20deg);
        }
        .spoon {
            transform: rotate(-30deg);
        }
        .wing2 {
            @include size(20px, 30px, 45% 100% 45% 0);
            transform: translateX(0px);
        }
        .card {
            animation: cardAnimation 0.5s infinite alternate;
        }
    }
}

.grid {
    $width: 0.2em;
    @include flex;
    @include size($gridSize, $gridSize, 50%);
    background: $colorBlue content-box;
    border: solid $width $colorBlue;
    padding: $width;
    &.red {
        background: $colorRed content-box;
        border: solid $width $colorRed;
        @include penguin($colorRed);
    }
    &.yellow {
        background: $colorYellow content-box;
        border: solid $width $colorYellow;
        @include penguin($colorYellow);
    }
    &.green {
        background: $colorGreen content-box;
        border: solid $width $colorGreen;
        @include penguin($colorGreen);
    }
    &.blue {
        background: $colorBlue content-box;
        border: solid $width $colorBlue;
        @include penguin($colorBlue);
    }
}

.penguinLabour {
    &.red {
        @include penguin($colorRed);
    }
    &.yellow {
        @include penguin($colorYellow);
    }
    &.green {
        @include penguin($colorGreen);
    }
    &.blue {
        @include penguin($colorBlue);
    }
}

/* Fish Icon */
@mixin fish(
    $primary,
    $secondary,
    $bodyWidth,
    $bodyHeight: $bodyWidth,
    $eyeSize,
    $tailsSize
) {
    @include size($bodyWidth, $bodyHeight, 100% 100% 5% 100%);
    background-color: $primary;
    box-shadow: inset 0px calc(-0.1 * $bodyWidth) $secondary;

    .eye {
        @include size($eyeSize, $eyeSize, 100%);
        background-color: black;
        position: absolute;
        border: solid 2px white;
        top: 15%;
        left: 20%;
    }

    .tails {
        @include size($tailsSize, $tailsSize);
        position: absolute;
        top: $bodyHeight - calc($tailsSize / 2);
        left: $bodyWidth - calc($tailsSize / 2);
        transform: rotate(-45deg);
        .tail1,
        .tail2 {
            background-color: $primary;
        }
        .tail1 {
            z-index: 3;
            @include size(calc($tailsSize / 2), $tailsSize, 0 100% 100% 0);
            transform: rotate(45deg);
            position: absolute;
            left: 5%;
            box-shadow: inset 0px calc(-0.1 * $bodyWidth) $secondary;
        }
        .tail2 {
            z-index: 2;
            @include size(calc($tailsSize / 2), $tailsSize, 100% 0 0 100%);
            transform: rotate(-45deg);
            position: absolute;
            right: 5%;
            box-shadow: inset calc($bodyWidth * 0.1) 0px $secondary;
        }
    }
}

.fish-1 {
    @include fish(
        $colorGrey,
        $colorGreyDark,
        $fishBodyWidth,
        $fishBodyHeight,
        $fishEyeSize,
        $fishTailSize
    );
}

.fish-2 {
    @include fish(
        $colorPurple,
        $colorPurpleDark,
        $fishBodyWidth,
        $fishBodyHeight,
        $fishEyeSize,
        $fishTailSize
    );
}

.fish-3 {
    @include fish(
        $colorOrange,
        $colorOrangeDark,
        $fishBodyWidth,
        $fishBodyHeight,
        $fishEyeSize,
        $fishTailSize
    );
}

/* Fish Box Icon */
.fishBox {
    position: relative;
    @include size(100px);
    .box {
        $w: 100px;
        $h: 50px;
        z-index: 5;
        @include flex;
        @include size(100px, 50px, 2px 2px 5px 5px);
        @include absPos(50%, 100%);
        transform: translateX(calc(-1 * $w/2)) translateY(-1 * $h);
        h1 {
            color: black;
        }
        &.red {
            background-color: $colorRedLight;
            box-shadow: inset 0px -5px $colorRed;
        }
        &.yellow {
            background-color: $colorYellowLight;
            box-shadow: inset 0px -5px $colorYellow;
        }
        &.green {
            background-color: $colorGreenLight;
            box-shadow: inset 0px -5px $colorGreen;
        }
        &.blue {
            background-color: $colorBlueLight;
            box-shadow: inset 0px -5px $colorBlue;
        }
    }
    .tf-1 {
        z-index: 1;
        @include absPos(0px, 25px);
        transform: rotate(10deg);
    }
    .tf-2 {
        z-index: 3;
        @include absPos(30px, 30px);
        transform: rotate(-150deg);
    }
    .tf-3 {
        z-index: 2;
        @include absPos(50px, 20px);
        transform: rotate(50deg);
    }
    .tf-4 {
        z-index: 4;
        @include absPos(65px, 40px);
        transform: rotate(-100deg);
    }
}

.blackFish {
    @include fish(
        black,
        black,
        $fishBodyWidth,
        $fishBodyHeight,
        $fishEyeSize,
        $fishTailSize
    );
    border: solid 2px white;
}

/* Celebration Ribbons */
.allRibbons {
    @include size(100%, 100%);
    @include absPos(0, 0);
    overflow: hidden;

    $colorRed: #ed5564;
    $colorYellow: #ffce54;
    $colorGreen: #a0d568;
    $colorBlue: #4fc1e8;
    $colorPurple: #ac92eb;
    $colors: ($colorRed, $colorYellow, $colorGreen, $colorBlue, $colorPurple);

    @mixin falling($firstDeg, $secondDeg, $delay) {
        @keyframes fallingAni {
            0% {
                opacity: 0.2;
                transform: translate(0px, 0) rotate($firstDeg);
            }
            70% {
                opacity: 1;
            }
            100% {
                opacity: 0;
                transform: translate(0px, 200px) rotate($secondDeg);
            }
        }

        animation: fallingAni 1s infinite both;
        animation-delay: $delay;
    }

    [class^="ribbon"] {
        @include size(5px, 15px, 2px);
    }

    @for $i from 1 through 50 {
        $posX: random() * 100%;
        $posY: random() * -70% + 50%;
        $first: random(30) - 50;
        $second: random(50) - 10;
        $delay: $i * -0.1s;
        $bodyColor: nth($colors, random(5));

        .ribbon#{$i} {
            z-index: $i;
            @include absPos($posX, $posY);
            @include falling(#{$first}deg, #{$second}deg, $delay);
            background-color: $bodyColor;
        }
    }
}
